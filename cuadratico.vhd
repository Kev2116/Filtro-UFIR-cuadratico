-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\Windows\Documents\Practicas MATLAB\Cuadratico\cuadratico\cuadratico.vhd
-- Created: 2022-05-28 20:58:20
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.001
-- Target subsystem base rate: 0.001
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: cuadratico
-- Source Path: cuadratico/cuadratico
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.cuadratico_pkg.ALL;

ENTITY cuadratico IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        in1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        out_rsvd                          :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
        );
END cuadratico;


ARCHITECTURE rtl OF cuadratico IS

  -- Component Declarations
  COMPONENT Discrete_FIR_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          Discrete_FIR_Filter_in          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          Discrete_FIR_Filter_out         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Discrete_FIR_Filter
    USE ENTITY work.Discrete_FIR_Filter(rtl);

  -- Signals
  SIGNAL in1_signed                       : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay1_out1                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain1_out1                       : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Delay_out1                       : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay2_out1                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum2_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum2_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum_out1                         : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain_out1                        : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum1_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum1_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain6_out1                       : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL Gain5_out1                       : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Gain4_out1                       : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum4_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_cast_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_temp                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_cast_2                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain3_out1                       : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Gain2_out1                       : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Sum3_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_add_temp                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_add_cast_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain7_cast                       : signed(16 DOWNTO 0);  -- sfix17_En10
  SIGNAL Gain7_cast_1                     : signed(16 DOWNTO 0);  -- sfix17_En10
  SIGNAL Gain7_out1                       : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Delay3_reg                       : vector_of_signed32(0 TO 34);  -- sfix32 [35]
  SIGNAL Delay3_out1                      : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Sum5_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain8_out1                       : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Discrete_FIR_Filter_out1         : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_Discrete_FIR_Filter : Discrete_FIR_Filter
    PORT MAP( clk => clk,
              reset => reset,
              Discrete_FIR_Filter_in => std_logic_vector(Gain8_out1),  -- sfix32_En28
              Discrete_FIR_Filter_out => Discrete_FIR_Filter_out1  -- sfix16_En10
              );

  in1_signed <= signed(in1);

  Gain1_out1 <= to_signed(-16#6000#, 16) * Delay1_out1;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= to_signed(16#0000#, 16);
      ELSE 
        Delay1_out1 <= Delay_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_signed(16#0000#, 16);
      ELSE 
        Delay2_out1 <= Delay1_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Sum2_add_cast <= Gain1_out1(28 DOWNTO 13);
  Sum2_out1 <= Delay2_out1 + Sum2_add_cast;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(16#0000#, 16);
      ELSE 
        Delay_out1 <= Sum_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Gain_out1 <= to_signed(16#6000#, 16) * Delay_out1;

  Sum1_add_cast <= Gain_out1(28 DOWNTO 13);
  Sum1_out1 <= Sum1_add_cast + Sum2_out1;

  Sum_out1 <= in1_signed + Sum1_out1;

  Gain6_out1 <= to_signed(16#5D55#, 16) * Sum_out1;

  Gain5_out1 <= to_signed(-16#5AAB#, 16) * Delay_out1;

  Gain4_out1 <= to_signed(16#6000#, 16) * Delay1_out1;

  Sum4_add_cast <= Gain6_out1(26 DOWNTO 11);
  Sum4_add_cast_1 <= Gain5_out1(27 DOWNTO 12);
  Sum4_add_temp <= Sum4_add_cast + Sum4_add_cast_1;
  Sum4_add_cast_2 <= Gain4_out1(28 DOWNTO 13);
  Sum4_out1 <= Sum4_add_temp + Sum4_add_cast_2;

  Gain3_out1 <= to_signed(-16#71C7#, 16) * Delay_out1;

  Gain2_out1 <= to_signed(16#657A#, 16) * Delay1_out1;

  Sum3_add_cast <= Gain3_out1(29 DOWNTO 14);
  Sum3_add_temp <= Sum_out1 + Sum3_add_cast;
  Sum3_add_cast_1 <= Gain2_out1(30 DOWNTO 15);
  Sum3_out1 <= Sum3_add_temp + Sum3_add_cast_1;

  Gain7_cast <= resize(Sum3_out1, 17);
  Gain7_cast_1 <=  - (Gain7_cast);
  Gain7_out1 <= Gain7_cast_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_reg <= (OTHERS => to_signed(0, 32));
      ELSE 
        Delay3_reg(0) <= Gain7_out1;
        Delay3_reg(1 TO 34) <= Delay3_reg(0 TO 33);
      END IF;
    END IF;
  END PROCESS Delay3_process;

  Delay3_out1 <= Delay3_reg(34);

  Sum5_add_cast <= Delay3_out1(30 DOWNTO 15);
  Sum5_out1 <= Sum4_out1 + Sum5_add_cast;

  Gain8_out1 <= to_signed(16#57C5#, 16) * Sum5_out1;

  out_rsvd <= Discrete_FIR_Filter_out1;

END rtl;

